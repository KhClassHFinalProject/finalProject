package yong.controller;

import java.io.IOException;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpRequest;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import yong.member.model.MemberDAO;
import yong.member.model.MemberDAOImple;
import yong.member.model.MemberDTO;

@Controller

public class MemberController {
	
	@Autowired
	private MemberDAO memberDao;
	
	
	@RequestMapping(value = "/memberJoin.do", method = RequestMethod.GET)
	public ModelAndView memberJoinForm() {
		ModelAndView mav = new ModelAndView();

		mav.setViewName("member/memberJoinForm");

		return mav;
	}

	@RequestMapping(value = "/memberIdCheck.do", method = RequestMethod.GET)
	public ModelAndView memberIdCheckForm() {
		ModelAndView mav = new ModelAndView();

		mav.setViewName("member/memberIdCheckForm");

		return mav;
	}

	@RequestMapping(value = "/memberIdCheck.do", method = RequestMethod.POST)
	public ModelAndView memberIdCheck(@ModelAttribute("dto")MemberDTO dto) {
		ModelAndView mav = new ModelAndView();
		
		int count = memberDao.memberIdCheck(dto.getId());
		
		if(count>=1){
			mav.addObject("result", "true");
		}else{
			mav.addObject("result", "false");
		}
		mav.setViewName("member/memberIdCheck");

		return mav;
	}

	@RequestMapping(value = "/memberJoin.do", method = RequestMethod.POST)
	public ModelAndView memberJoinSubmit(@ModelAttribute("dto")MemberDTO dto) {
		ModelAndView mav = new ModelAndView();
		
		
		int count = memberDao.memberJoin(dto);
		if(count>0){
			mav.addObject("result", "true");
		}else{
			mav.addObject("result", "false");
		}
		mav.setViewName("member/memberJoin");
		return mav;
	}
	
	@RequestMapping("/memberLoginForm.do")
	public ModelAndView memberLoginForm
		(@CookieValue(value="cid",defaultValue="noid")String saveid){
		ModelAndView mav = new ModelAndView();
		mav.setViewName("member/memberLoginForm");
		return mav;
	}
	
	@RequestMapping("/memberLogin.do")
	public ModelAndView memberLogin
	(MemberDTO dto, String saveid,HttpServletRequest req,HttpServletResponse resp){
		ModelAndView mav = new ModelAndView();
		
		Cookie ck = new Cookie("cid", dto.getId());
		if(saveid!=null && saveid.equals("on")){
			ck.setMaxAge(60*60*24);
			resp.addCookie(ck);
		}else{
			ck.setMaxAge(0);
			resp.addCookie(ck);
		}
		
		int count = memberDao.memberLogin(dto.getId(), dto.getPwd());
		if(count>0){
			HttpSession session = req.getSession();
			session.setAttribute("sid", dto.getId());
		}
		
		mav.addObject("count", count);
		mav.setViewName("member/memberLogin");
		return mav;
	}
	
	
	@RequestMapping("/memberLoginSuccess.do")
	public ModelAndView memberLoginSuccess
	(@CookieValue(value="cid",defaultValue="noid")String cid){
	
		ModelAndView mav = new ModelAndView();
		mav.addObject("ccid",cid);
		mav.setViewName("member/memberLoginSuccess");
		return mav;
	}
	
	@RequestMapping("/memberLogout.do")
	public ModelAndView memberLogout(HttpSession session){
		String sid = (String)session.getAttribute("sid");
		session.removeAttribute(sid);
		session.invalidate();
//		System.out.println("남은세션확인 : "+(String)session.getAttribute("sid"));
		
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("member/memberLoginForm");
		return mav;
	}
}
